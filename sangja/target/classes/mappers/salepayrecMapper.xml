<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sangja.mappers.salepayrec">
	<!-- 게시물 목록 -->
	<select id="list" resultType="com.sangja.domain.SalePayRecVO">
		select
		pay_num,
		sale_num,
		pay_type,
		check_no,
		pay_amt,
		pay_ymdt,
		file_num,
		editor,
		crt_ymdt,
		mod_ymdt
		from
		tbl_sale_pay_rec
	</select>
	<select id="listBysalenum" parameterType="string"
		resultType="com.sangja.domain.SalePayRecVO">
		select
		pay_num,
		sale_num,
		pay_type,
		check_no,
		pay_amt,
		pay_ymdt,
		file_num,
		editor,
		crt_ymdt,
		mod_ymdt
		from
		tbl_sale_pay_rec where
		sale_num=#{sale_num}
	</select>
	<select id="listBysalenums" parameterType="java.util.List"
		resultType="com.sangja.domain.SalePayRecVO">
		select
		pay_num,
		sale_num,
		pay_type,
		check_no,
		pay_amt,
		pay_ymdt,
		file_num,
		editor,
		crt_ymdt,
		mod_ymdt
		from
		tbl_sale_pay_rec where sale_num in (
		<foreach collection="list" item="item" separator=",">
			#{item.sale_num}
		</foreach>
		)
	</select>

	<!-- 게시물 작성 -->
	<insert id="write"
		parameterType="com.sangja.domain.SalePayRecVO">
		insert into
		tbl_sale_pay_rec
		(
		sale_num,
		pay_type,
		check_no,
		pay_amt,
		pay_ymdt,
		file_num,
		editor,
		crt_ymdt,
		mod_ymdt)
		values(
		#{sale_num},
		#{pay_type},
		#{check_no},
		#{pay_amt},
		#{pay_ymdt},
		#{file_num},
		#{editor},
		#{crt_ymdt},
		#{mod_ymdt}
		)
	</insert>

	<!-- 게시물 조회 -->
	<select id="view" parameterType="int"
		resultType="com.sangja.domain.SalePayRecVO">
		select
		pay_num,
		sale_num,
		pay_type,
		check_no,
		pay_amt,
		pay_ymdt,
		file_num,
		editor,
		crt_ymdt,
		mod_ymdt
		from
		tbl_sale_pay_rec
		where
		pay_num =
		#{pay_num}
	</select>

	<!-- 게시물 수정 -->
	<update id="modify"
		parameterType="com.sangja.domain.SalePayRecVO">
		update tbl_sale_pay_rec
		set
		sale_num=#{sale_num},
		pay_type=#{pay_type},
		check_no=#{check_no},
		pay_amt=#{pay_amt},
		pay_ymdt=#{pay_ymdt},
		file_num=#{file_num},
		editor=#{editor},
		crt_ymdt=#{crt_ymdt},
		mod_ymdt=#{mod_ymdt}
		where
		pay_num = #{pay_num}
	</update>

	<!-- 게시물 삭제 -->
	<delete id="delete" parameterType="int">
		delete
		from tbl_sale_pay_rec
		where
		pay_num
		= #{pay_num}
	</delete>

	<!-- 게시물 총 갯수 -->
	<select id="count" resultType="int">
		select count(pay_num) from
		tbl_sale_pay_rec
	</select>
	
	<select id="paysum" parameterType="string"
		resultType="double">
		select
		ifnull(sum(pay_amt),0) pay_amt
		from
		tbl_sale_pay_rec where
		sale_num=#{sale_num}
	</select>
	
	<!-- 게시물 목록 + 페이징 -->
	<select id="listPage" parameterType="hashMap"
		resultType="com.sangja.domain.SalePayRecVO">
		select
		pay_num,
		sale_num,
		pay_type,
		check_no,
		pay_amt,
		pay_ymdt,
		editor,
		crt_ymdt,
		mod_ymdt
		from tbl_sale_pay_rec
		order by pay_num desc
		limit #{displayPost},
		#{postNum}
	</select>
	<!-- 게시물 목록 + 페이징 +검색 -->
	<select id="listPageSearch" parameterType="hashMap"
		resultType="com.sangja.domain.SalePayRecVO">
		select
		pay_num,
		sale_num,
		pay_type,
		check_no,
		pay_amt,
		pay_ymdt,
		editor,
		crt_ymdt,
		mod_ymdt
		from tbl_sale_pay_rec

		<if test='searchType.equals("title")'>
			WHERE title LIKE concat('%', #{keyword}, '%')
		</if>

		<if test='searchType.equals("content")'>
			WHERE content LIKE concat('%', #{keyword}, '%')
		</if>

		<if test='searchType.equals("title_content")'>
			WHERE title LIKE concat('%', #{keyword}, '%')
			or content
			LIKE concat('%', #{keyword}, '%')
		</if>

		<if test='searchType.equals("writer")'>
			WHERE writer LIKE concat('%', #{keyword}, '%')
		</if>
		order by cust_num desc
		limit #{displayPost}, #{postNum}
	</select>

	<!-- 게시물 총 갯수 -->
	<select id="searchCount" parameterType="hashMap"
		resultType="int">
		select count(pay_num) from tbl_sale_pay_rec
		<if test='searchType.equals("title")'>
			WHERE title LIKE concat('%', #{keyword}, '%')
		</if>

		<if test='searchType.equals("content")'>
			WHERE content LIKE concat('%', #{keyword}, '%')
		</if>

		<if test='searchType.equals("title_content")'>
			WHERE title LIKE concat('%', #{keyword}, '%')
			or content
			LIKE concat('%', #{keyword}, '%')
		</if>

		<if test='searchType.equals("writer")'>
			WHERE writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
</mapper>